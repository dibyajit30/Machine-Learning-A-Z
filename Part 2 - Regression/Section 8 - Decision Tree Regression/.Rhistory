print("Hello world")
q()
v1 = 5
v2 <- 6.5
"abc" -> v3
print(v2)
cat(v1," ",v2," ",v3)
cat(v1,v2,v3)
print(Is())
print(ls())
q()
setwd("C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
source('C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/practice_polynomial_regression.R', echo=TRUE)
#Predicting the result of linear regression
y_pred = predict(lin_reg,data.frame(Level = 6.5))
y_pred
source('C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/practice_polynomial_regression.R', echo=TRUE)
source('C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/practice_polynomial_regression.R', echo=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.4")
source('C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/practice_polynomial_regression.R', echo=TRUE)
y_pred
setwd("C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
setwd("C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
source('C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)/practice_svr.R', echo=TRUE)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
View(regressor)
View(regressor)
View(regressor)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
setwd("C:/Users/Dibyajit Banerjee/Anaconda3/envs/Machine_Learning_A-Z/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
install.packages('rpart')
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(1))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.001)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred
